name: Build & Release

on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
      - develop

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - name: Set up Secrets
        run: |
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV
          echo "STORE_FILE=${{ secrets.STORE_FILE }}" >> $GITHUB_ENV
          echo "STORE_PASSWORD=${{ secrets.STORE_PASSWORD }}" >> $GITHUB_ENV

      - name: Create Keystore File
        run: echo "${{ secrets.KEYSTORE_FILE_CONTENT }}" | base64 --decode > islamxplorer_flutter/android/app/upload-keystore.jks

      - name: Debug STORE_FILE
        run: echo "STORE_FILE=$(pwd)/islamxplorer_flutter/android/app/upload-keystore.jks"

      - name: Build APK and AAB
        run: |
          cd islamxplorer_flutter  # Change to the Flutter project directory
          flutter build apk --release --split-per-abi
          flutter build appbundle --release

      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "islamxplorer_flutter/build/app/outputs/apk/release/*, islamxplorer_flutter/build/app/outputs/bundle/release/*"
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.CLI_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - name: Get latest release information
        id: get_release
        run: |
          release_id=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                      "https://api.github.com/repos/${{ github.repository }}/releases/latest" \
                      | jq -r '.id')
          echo "Release ID: $release_id" >> $GITHUB_ENV
          echo "AAB_URL=https://github.com/${{ github.repository }}/releases/download/$release_id/app-release.aab" >> $GITHUB_ENV

      - name: Download AAB artifact
        run: |
          wget -O islamxplorer_flutter/build/app/outputs/bundle/release/app-release.aab \
              $AAB_URL

      - name: Upload to Play Store (Production)
        uses: r0adkll/upload-google-play@v1.0.18
        with:
          serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON }} 
          packageName: com.islamxplorer.islamxplorer_flutter                       
          releaseFiles: "islamxplorer_flutter/build/app/outputs/bundle/release/app-release.aab"
          mappingFile: "islamxplorer_flutter/build/app/outputs/mapping/release/mapping.txt"
          track: production
